TODO schedule.
$Id: todo.txt,v 1.1.1.1 2002/08/20 10:03:08 berkus Exp $

1a. Закончить менеджер памяти (mimir).
2a. Проработать с Игорем его вариант шедулера.
3a. Сделать шедулер. (sched)
4a. Сделать диспетчер прерываний. (idisp)
5a. Сделать драйвер флоппи диска. (floppy)
6a. Сделать поддержку DMA.
7a. Сделать поддержку IDE. (atapi)


12. Allow building with optimizations on (-O>0)
-- Seems like nasm now eats almost everything ok.


10. Make console into internal ORB's component,
    instantiated on bootup right after GDT created.


11. Add logger facility to console: console__log_on, console__log_off,
    console__hook_logger and thru component interface: methods logging_on,
    logging_off, hook_logger.


1. Go thru all ORB branches and optimize them...


2. Intensively test the code for xcp management (method_fault and friends)


3. Need a test package to test all ORB methods. (+ Developer ORB support)


4. Create a dbg_* suite of helper functions that will use 486+ DRx
   debugging registers. And another to use P3+ debugging MSRs.
   Make classes for that (single interface).


5. Sjofn TODO list:
 - xrefs sorting in two modes
   1. alphabetical
   2. sections + sym address (first by sections)
 - optimizing ("smart") linker
   reference count each access to symbol (symbol address)
   for symbols that are not referenced - drop them out and
   recalculate addresses again.


7. IDL extensions:
 ? specifying x86 registers on which pass/return values
   ( The problem is: currently only stack passing of parameters is supported )
 ? specifying multiple return values a-la
   `method_name(param1,param2):(return1,return2)`
   (and forthcoming for deft)

   Перевести idlc на libIDL.


8. Use cvs2cl.pl for generating changelogs for the site
   (yes, add changelog browser to the site).


9. Make trees support functions into macros with some tunable %defines
   - at least some extra features support (e.g. allow duplicate entries)


* Jotun loader.
* RDOFF2 loader (see into format for possible compatibility issues).

